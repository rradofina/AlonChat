/* Updated: Global styles. */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Animation classes for photo selection mode */
@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slide-down {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slide-up {
  from {
    transform: translateY(100%);
  }
  to {
    transform: translateY(0);
  }
}

.animate-fade-in {
  animation: fade-in 0.3s ease-out;
}

.animate-slide-down {
  animation: slide-down 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.animate-slide-up {
  animation: slide-up 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Template scaling when favorites bar expands */
.layout-main-content {
  display: flex;
  flex-direction: column;
}

/* Root-level viewport fixes for mobile browsers */
:root {
  --full-vh: 100vh; /* Will be updated by JavaScript */
  --vh: 1vh; /* Will be updated by JavaScript */
}

/* Prevent overscroll and ensure app fits viewport */
html, body {
  height: 100%;
  overscroll-behavior: none;
  -webkit-overflow-scrolling: touch;
}

/* Main app container should use dynamic viewport */
#__next {
  min-height: 100%;
  min-height: 100dvh;
  min-height: var(--full-vh, 100vh);
  overflow-x: hidden;
  overflow-y: auto;
}

/* Clipping indicator zebra stripe animation */
@keyframes zebra-stripes {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 16px 16px;
  }
}

/* FIXED-HEIGHT LAYOUT: Portrait tablet viewport utilities */
@layer utilities {
  /* Safe viewport height - accounts for system UI */
  .min-h-safe-screen {
    min-height: 100vh;
    min-height: 100dvh; /* Dynamic viewport height for mobile browsers */
    min-height: calc(var(--full-vh, 100vh)); /* Fallback to JS-calculated height */
  }
  
  /* Fixed-height layout system */
  .layout-header {
    height: 60px;
    flex-shrink: 0;
  }
  
  /* Mobile/Tablet: Account for bottom favorites bar with proper spacing */
  .layout-main-content {
    /* Use dvh (dynamic viewport height) which adjusts when browser UI shows/hides */
    height: calc(100dvh - 60px - 150px - 8px);
    /* Fallback for browsers without dvh support */
    height: calc(var(--full-vh, 100vh) - 60px - 150px - 8px);
    overflow-y: auto;
    margin-bottom: 8px; /* Gap between photo container and favorites bar */
  }
  
  /* Desktop: No bottom favorites bar, only subtract header */
  @media (min-width: 1024px) {
    .layout-main-content {
      height: calc(100dvh - 60px);
      height: calc(var(--full-vh, 100vh) - 60px);
      margin-bottom: 0; /* No favorites bar on desktop */
    }
  }
  
  .layout-favorites {
    height: 150px;
    flex-shrink: 0;
    overflow-y: auto;
  }
  
  /* iPad-specific optimizations */
  @media (min-width: 768px) and (max-width: 1024px) and (orientation: portrait) {
    .layout-main-content {
      height: calc(100dvh - 60px - 150px - 12px);
      height: calc(var(--full-vh, 100vh) - 60px - 150px - 12px);
      margin-bottom: 12px;
    }
  }
  
  /* Emergency clipping detection indicator */
  .clipping-warning {
    position: fixed;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    background: linear-gradient(45deg, #ff0000 25%, #ffff00 25%, #ffff00 50%, #ff0000 50%, #ff0000 75%, #ffff00 75%);
    background-size: 16px 16px;
    animation: zebra-stripes 0.5s linear infinite;
    color: white;
    padding: 4px 8px;
    font-size: 10px;
    font-weight: bold;
    z-index: 9999;
    border-radius: 4px 4px 0 0;
  }
}

/* DEVELOPMENT: Viewport debugging utilities (remove in production) */
@layer utilities {
  .viewport-debug::after {
    content: attr(data-viewport-info);
    position: fixed;
    top: 4px;
    right: 4px;
    background: rgba(0, 0, 0, 0.8);
    color: white;
    padding: 4px 8px;
    font-size: 10px;
    font-family: monospace;
    border-radius: 4px;
    z-index: 9998;
    pointer-events: none;
  }
} 